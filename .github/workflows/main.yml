name: Actions

on:
  pull_request: {}
  push: { branches: [master], paths: 'AFKScape/**'}

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2019.3.13f1

jobs:  
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
    
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
    
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: AFKScape/Library
          key: Library

      # Test
      - name: Run Unit Tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          projectPath: AFKScape
          unityVersion: $UNITY_VERSION
          artifactsPath: ./testReports/${{ matrix.targetPlatform }}
          
      # Install dotnet
      - name: Installing dotnet
        if: always()
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.202'
          
      # run style cop
      - name: Run Style Cop
        run: sh ./Scripts/run-style-cop.sh
          
      # Do the report magic
      - name: Generate .html report
        run: sudo dotnet ./Tools/ExtentReports/ExtentReportsDotNetCLI.dll -i=testReports/${{ matrix.targetPlatform }}/editmode-results.xml -o testReports/${{ matrix.targetPlatform }}/
        if: always()
        
      # Upload test results
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: Test results
          path: ./testReports/${{ matrix.targetPlatform }}

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
    
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library

      # Build
      - name: Build AFKScape
        uses: webbertakken/unity-builder@v0.10
        with:
          unityVersion: $UNITY_VERSION
          targetPlatform: StandaloneWindows64  

      # Output 
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build
  
